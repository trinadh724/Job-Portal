[{"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/index.js":"1","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/App.js":"2","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/layouts/Navbar.js":"3","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/layouts/Landing.js":"4","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/auth/Register.js":"5","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/auth/Login.js":"6","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/store.js":"7","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/index.js":"8","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/alert.js":"9","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/types.js":"10","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/alert.js":"11","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/layouts/Alert.js":"12","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/auth.js":"13","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/authReducer.js":"14","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/utils/setdefaultxauth.js":"15","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/Dashboard.js":"16","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/routes/PrivateRoute/Privateroute.js":"17","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/profile.js":"18","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/profile.js":"19","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/EditProfile.js":"20","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/Profile.js":"21","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/AddEducation.js":"22","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/TemplateForEducation.js":"23","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/TemplateForProfile.js":"24","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/jobs.js":"25","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/AddJob.js":"26","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/jobs.js":"27","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/TemplateRecruiter.js":"28","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/EditJob.js":"29","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/ViewJob.js":"30","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/TemplateApplicant.js":"31","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/AddSOP.js":"32","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/applications.js":"33","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/applications.js":"34","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/MyApplications.js":"35","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/DisplayApplications.js":"36","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/DisplayRecruiterSide.js":"37","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/AcceptedApplications.js":"38"},{"size":151,"mtime":1611256689553,"results":"39","hashOfConfig":"40"},{"size":2626,"mtime":1611678818597,"results":"41","hashOfConfig":"40"},{"size":1864,"mtime":1611679286144,"results":"42","hashOfConfig":"40"},{"size":796,"mtime":1611480136864,"results":"43","hashOfConfig":"40"},{"size":3423,"mtime":1611669543407,"results":"44","hashOfConfig":"40"},{"size":2048,"mtime":1611669544459,"results":"45","hashOfConfig":"40"},{"size":375,"mtime":1611314818292,"results":"46","hashOfConfig":"40"},{"size":319,"mtime":1611638671178,"results":"47","hashOfConfig":"40"},{"size":445,"mtime":1611339225455,"results":"48","hashOfConfig":"40"},{"size":2126,"mtime":1611659563184,"results":"49","hashOfConfig":"40"},{"size":367,"mtime":1611393858221,"results":"50","hashOfConfig":"40"},{"size":728,"mtime":1611322650053,"results":"51","hashOfConfig":"40"},{"size":3000,"mtime":1611669548016,"results":"52","hashOfConfig":"40"},{"size":1032,"mtime":1611396454957,"results":"53","hashOfConfig":"40"},{"size":249,"mtime":1611379908787,"results":"54","hashOfConfig":"40"},{"size":2219,"mtime":1611643235803,"results":"55","hashOfConfig":"40"},{"size":615,"mtime":1611498759019,"results":"56","hashOfConfig":"40"},{"size":1304,"mtime":1611515340736,"results":"57","hashOfConfig":"40"},{"size":4163,"mtime":1611669545792,"results":"58","hashOfConfig":"40"},{"size":3456,"mtime":1611669532348,"results":"59","hashOfConfig":"40"},{"size":1760,"mtime":1611669529691,"results":"60","hashOfConfig":"40"},{"size":2483,"mtime":1611669534120,"results":"61","hashOfConfig":"40"},{"size":1385,"mtime":1611669521213,"results":"62","hashOfConfig":"40"},{"size":1706,"mtime":1611515935095,"results":"63","hashOfConfig":"40"},{"size":1073,"mtime":1611638961328,"results":"64","hashOfConfig":"40"},{"size":4967,"mtime":1611675669555,"results":"65","hashOfConfig":"40"},{"size":4987,"mtime":1611638778441,"results":"66","hashOfConfig":"40"},{"size":2910,"mtime":1611678625881,"results":"67","hashOfConfig":"40"},{"size":2689,"mtime":1611669535561,"results":"68","hashOfConfig":"40"},{"size":2539,"mtime":1611678506958,"results":"69","hashOfConfig":"40"},{"size":2448,"mtime":1611683166580,"results":"70","hashOfConfig":"40"},{"size":2283,"mtime":1611674528722,"results":"71","hashOfConfig":"40"},{"size":894,"mtime":1611659654686,"results":"72","hashOfConfig":"40"},{"size":4217,"mtime":1611662375315,"results":"73","hashOfConfig":"40"},{"size":1442,"mtime":1611646294776,"results":"74","hashOfConfig":"40"},{"size":1867,"mtime":1611650863379,"results":"75","hashOfConfig":"40"},{"size":2671,"mtime":1611678594536,"results":"76","hashOfConfig":"40"},{"size":2240,"mtime":1611679211446,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1u4ttqh",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"80"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"80"},"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/index.js",[],["170","171"],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/App.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/layouts/Navbar.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/layouts/Landing.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/auth/Register.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/auth/Login.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/store.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/index.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/alert.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/types.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/alert.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/layouts/Alert.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/auth.js",["172"],"import { CLEAR_PROFILE,  REG_SUCC, REG_FAIL, Applicant , USER_LOADED, AUTH_FAILED, LOGIN_FAIL, LOGIN_SUCC, LOGOUT} from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {setDefaultXAuthForToken} from '../utils/setdefaultxauth';\nimport {getUserProfile} from './profile';\n\nexport const loaduserusingtoken = () => async dispatch => {\n    setDefaultXAuthForToken(localStorage.getItem('token'));\n    try {\n        const response = await axios.get('/profile/me');\n        dispatch({\n            type: USER_LOADED,\n            payload: response.data\n        });\n        // dispatch(getUserProfile);\n    } catch (err) {\n        dispatch({\n            type: AUTH_FAILED\n        });\n    }\n};\n\nexport const loginuser = ({password, email}) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n          };\n        //   console.log(password);\n        //   console.log(email);\n        const newUser = {\n            password,\n            email\n        };\n        const userData = JSON.stringify(newUser);\n        const response = await axios.post('/auth/login', userData, config);\n        dispatch({\n            type: LOGIN_SUCC,\n            payload: response.data\n        });\n        dispatch(loaduserusingtoken());\n    } catch (err) {\n        let errors;\n        if (err.response && err.response.data)\n        {\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        });\n        dispatch(loaduserusingtoken());\n    }\n};\n\n\n\nexport const registeruser = ({name, email, password, who}) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n          };\n        const newUser = {\n            name,\n            email,\n            password,\n            who\n        };\n        const userData = JSON.stringify(newUser);\n        let response;          \n        if(who === Applicant){\n            response = await axios.post('/applicant', userData, config);\n        }\n        else{\n            response = await axios.post('/recruiter', userData, config);\n        }\n        dispatch({\n            type: REG_SUCC,\n            payload: response.data\n        });\n        dispatch(loaduserusingtoken());\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: REG_FAIL\n        });\n        dispatch(loaduserusingtoken());\n    }\n};\n\n\nexport const logoutuser = () => dispatch => {\n    // console.log('I am here');\n    dispatch({\n        type: CLEAR_PROFILE\n    })\n    dispatch({\n        type: LOGOUT\n    });\n};","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/authReducer.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/utils/setdefaultxauth.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/Dashboard.js",["173"],"import React , {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getJobs } from '../../actions/jobs';\nimport { Applicant } from '../../actions/types';\nimport {Link} from 'react-router-dom';\nimport {loaduserusingtoken} from '../../actions/auth';\nimport TemplateRecruiter from './TemplateRecruiter';\nimport TemplateApplicant from './TemplateApplicant';\nimport {getApplications} from '../../actions/applications';\n\n\nconst Dashboard = ({ getJobs, auth, jobs: {jobs, loading, cjob},applications, getApplications, loaduserusingtoken}) => {\n    \n    useEffect(()=> {\n        loaduserusingtoken();\n        getJobs();\n        getApplications();\n      }, []);\n    return (<Fragment>\n            {loading || auth.loading || !auth.user || cjob!=null || (auth.user.who === 'Recruiter' && !jobs) || applications.loading ? <Fragment>Loading...</Fragment> : \n    <Fragment>\n\n        <h1>Dashboard</h1>\n            {auth.user && auth.user.who === Applicant ? \n            <Fragment>\n                <h3> \n                    <i className=\"fas fa-user\"></i>\n                    Applicants Dashboard\n                </h3>\n                <TemplateApplicant jobs={jobs}/>\n            </Fragment>\n            :\n            <Fragment>\n                <h3>\n                    <i className=\"fas fa-user\"></i>\n                    Recruiter Dashborad\n                </h3>\n                <Link to=\"/addjob\" className=\"btn btn-light\"\n                    ><i className=\"fas fa-user-circle text-primary\"></i>Add New Job </Link>\n                <TemplateRecruiter jobs={jobs}/>\n            </Fragment>\n            }\n    </Fragment>}\n    </Fragment>);\n};\n\nDashboard.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    jobs: PropTypes.object.isRequired,\n    loaduserusingtoken: PropTypes.func.isRequired,\n    applications: PropTypes.object.isRequired,\n    getApplications: PropTypes.func.isRequired,\n}\nconst mapStateToProps = (state) => ({\n    auth: state.authReducer,\n    jobs: state.jobs,\n    applications: state.applications, \n});\n\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(Dashboard);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/routes/PrivateRoute/Privateroute.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/profile.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/profile.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/EditProfile.js",["174","175"],"import {connect} from 'react-redux';\nimport React, {useState, Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {updateProfile, getUserProfile} from '../../actions/profile';\nimport { Applicant } from '../../actions/types';\n\n\nconst EditProfile = ({updateProfile, auth, profile: {profile, loading}, getUserProfile}) => {\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        skills: '',\n        who: '',\n        contactnumber: '',\n        bio: '',\n        email: ''\n    });\n    const  {\n        email,\n        name,\n        skills,\n        who,\n        contactnumber,\n        bio\n    } = formData;\n\n      useEffect(() => {\n        getUserProfile();\n        setFormData({\n          name: loading || !profile.name  ? '' : profile.name,\n          skills: loading || !profile.skills  ? '' : profile.skills,\n          who: loading || !profile.who  ? '' : profile.who,\n          contactnumber: loading || !profile.contactnumber  ? '' : profile.contactnumber,\n          bio: loading || !profile.bio  ? '' : profile.bio,\n          email: loading || !profile.email  ? '' : profile.email,\n        });\n    },[loading, getUserProfile]);\n    \n    if(auth.loading || !auth.user || loading || !profile)\n    {\n      return (<Fragment>Loading...</Fragment>)\n    }\n    // setFormData({who: auth.who});\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setFormData({ ...formData, email: auth.user.email});\n        updateProfile(formData, {who});\n    };\n    \n    return (\n        <Fragment>\n        <h1>Edit Profile</h1>\n      <p><i className=\"fas fa-user\"></i> Edit your profile</p>\n      <form onSubmit={e => onSubmit(e)}>\n        \n        <div className=\"form-group\">\n        <label for=\"nameid\">Name</label>\n          <input id=\"nameid\" type=\"name\" className=\"form-control\" placeholder=\"*Name\" name=\"name\" value={name} onChange={e => onChange(e)} required/>\n        </div>\n        {auth.user.who === Applicant ? <Fragment>\n          <div className=\"form-group\">\n        <label for=\"skillid\">Skills</label>\n          <input id=\"skillid\" type=\"skills\" className=\"form-control\" placeholder=\"Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n        </div>  \n        </Fragment>: \n        <Fragment>\n          <div className=\"form-group\">\n        <label for=\"contactid\">Contact Number</label>\n          <input id=\"contactid\" type=\"number\" className=\"form-control\" placeholder=\"*Mobile Number\" name=\"contactnumber\" value={contactnumber} onChange={e => onChange(e)} required/>\n        </div>\n        <div class=\"form-group\">\n      <label for=\"Textarea1\">Bio</label>\n      <textarea class=\"form-control\" id=\"area1\" rows=\"3\" name=\"bio\" value={bio} onChange={e => onChange(e)} required></textarea>\n    </div>\n        </Fragment>\n        }\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Update Profile\" />\n      </form>\n      </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n\n    updateProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    getUserProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state =>({\n    auth: state.authReducer,\n    profile: state.profile,\n});\nexport default connect(mapStateToProps, {updateProfile, getUserProfile})(EditProfile); \n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/Profile.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/AddEducation.js",["176","177","178"],"import React, {Fragment,  Link, useState, Redirect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addEducation} from '../../actions/profile';\nimport { Applicant } from '../../actions/types';\n\nconst AddEducation = ({auth: {loading, user}, addEducation}) => {\n    const [formData , setFormData] = useState({\n        to: '',\n        from : '',\n        institute: '',\n    });\n    const {\n        to,\n        from,\n        institute\n    } = formData;\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addEducation(formData);\n    }\n    if(loading || !user){\n        return (<Fragment>loading....</Fragment>)\n    }\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Add Education\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-graduation-cap\"></i> Add any Institute \n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit= {e => onSubmit(e)}>\n        <div className=\"form-group\">\n        <label for=\"insid\">Institute</label>\n          <input\n          id='insid'\n          className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Institute\"\n            name=\"institute\"\n            value={institute} onChange={e => onChange(e)} required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label for=\"id1\">Start Year (YYYY)</label>\n          <input type=\"number\" name=\"from\" id='id1'\n            placeholder=\"Start year\"\n            className=\"form-control\"\n            value={from} min='1950' max='2021' onChange={e => onChange(e)} required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label for=\"id2\">End Year (YYYY)</label>\n          <input type=\"number\" name=\"to\" id='id2'\n            placeholder=\"End Year\"\n            className=\"form-control\"\n            value={to} min='1950' max='2021' onChange={e => onChange(e)}\n            />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n      </form>\n      {/* <Link  to='/profile'>Go Back</Link> */}\n\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth : state.authReducer\n});\n\n\nexport default connect(mapStateToProps, {addEducation})(AddEducation);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/TemplateForEducation.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/profile/TemplateForProfile.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/jobs.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/AddJob.js",["179"],"import React ,{useState, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addNewJob} from '../../actions/jobs';\nimport {Link} from 'react-router-dom';\nimport { setalert } from '../../actions/alert';\n\nconst AddJob = ({addNewJob, setalert}) => {\n    const [formData, setFormData] = useState({\n        title: '',\n            applications: '',\n            positions: '',\n            skills: '',\n            typeOfJob: '',\n            duration: '',\n            salary: '',\n            deadline: ''\n      });\n    const {title,\n        applications,\n        positions,\n        deadline,\n        skills,\n        typeOfJob,\n        duration,\n        salary,} = formData;\n        const onChange = (e) => {\n            // console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value});\n          };\n      \n          const onSubmit = async (e) => {\n            e.preventDefault();\n\n            if(typeOfJob !== 'Full-time' && typeOfJob!=='Part-time' && typeOfJob!=='Work from Home'){\n              setalert('Please select type of job', 'danger');\n            }\n            else{\n              addNewJob(formData);\n            }\n            \n          }\n    return (\n        <Fragment>\n        <h1>Add New Job</h1>\n      <form onSubmit={e => onSubmit(e)}>\n      \n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of applications\" name=\"applications\" min='0' value={applications} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of positions\" name=\"positions\" min='0' value={positions} onChange={e => onChange(e)} required />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <input type=\"date\" className=\"form-control\" placeholder=\"date of posting\" max={Date.now} name=\"date_of_posting\"  value={date_of_posting} onChange={e => onChange(e)} required />\n        </div> */}\n\n        <div className=\"form-group\">\n          <input type=\"datetime-local\" className=\"form-control\" placeholder=\"deadline\" min={Date.now} name=\"deadline\"  value={deadline} onChange={e => onChange(e)} required />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"day of deadline\" name=\"day\" value={day} max='31' min='1' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"month of deadline\" name=\"month\" value={month} min='1' max='12' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"year of deadline\" name=\"year\" value={year} min='0' max='2021' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"hour of deadline\" name=\"hour\" value={hour} min='0' max='23' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"minute of deadline\" name=\"minute\" value={minute} min='0' max='59' onChange={e => onChange(e)} required />\n        </div> */}\n\n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <select class=\"custom-select\" name=\"typeOfJob\" value={typeOfJob} onChange={e => onChange(e)} required>\n       <option selected>Type of Job</option>\n        <option value=\"Full-time\">Full-time</option>\n        <option value=\"Part-time\">Part-time</option>\n        <option value=\"Work from Home\">Work from Home</option>\n        </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"duration\" name=\"duration\" value={duration} min='1' max='6' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"salary\" name=\"salary\" value={salary} onChange={e => onChange(e)} min='0' required />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add New Job\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddJob.propTypes = {\n    addNewJob: PropTypes.func.isRequired,\n    setalert: PropTypes.func.isRequired,\n}\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(mapStateToProps, {addNewJob, setalert})(AddJob);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/jobs.js",["180","181","182"],"import { DELETE_JOB, ERROR_WHILE_DELETING_JOB, ERROR_LOADING_JOB, LOADED_JOB, ADD_NEW_JOB, ERROR_ADDING_JOB, GOT_JOBS, ERROR_GETTING_JOB, EDITED_JOB, FAILED_EDITING_JOB, GET_ALL_JOBS} from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {loaduserusingtoken} from './auth';\n\n\nexport const addNewJob = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        let response;\n        const data = JSON.stringify(formData);\n        response = await axios.post('/jobs', data, config);\n        dispatch({\n            type: ADD_NEW_JOB,\n            payload: response.data\n        });\n        dispatch(setalert('Added Job Sucesfully', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_ADDING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n};\n\n\nexport const getJobs = () => async dispatch => {\n    try {\n        const response = await axios.get('/jobs');\n        dispatch({\n            type: GOT_JOBS,\n            payload: response.data\n        });\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_GETTING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n}\n\nexport const deleteJob = (id) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        let response;\n        let data = JSON.stringify({id});\n        response = await axios.post('/jobs/delete', data, config);\n        \n        dispatch({\n            type: DELETE_JOB,\n            payload: response.data\n        });\n        dispatch(setalert('Deleted Job', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_GETTING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        }); \n    }\n}\n\nexport const loadJobWithId = (id) => async dispatch => {\n    try {\n        // console.log('jelo');\n        const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n    }\n        const data = JSON.stringify({id});\n        let response = await axios.post('/jobs/id',data, config);\n        // console.log(response.data);\n        dispatch({\n            type: LOADED_JOB,\n            payload: response.data\n        });\n        // console.log(response.data);\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_LOADING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n\n    }\n} \n\nexport const editJob = (formdata) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n            const data = JSON.stringify(formdata);\n            const response = await axios.post('/jobs/update', data, config);\n            dispatch({\n                type: EDITED_JOB,\n                payload: response.data\n            })\n            dispatch(setalert('Edited Profile Sucessfully', 'danger'));\n        \n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_EDITING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n}\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/TemplateRecruiter.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/EditJob.js",["183"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\n\n\nconst EditJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId}) => {\n    const id = match.params.id;\n    // console.log(id);\n    const [formData, setFormData] = useState({\n            applications: '',\n            positions: '',\n            deadline: '',\n      });\n      \n    const {\n        applications,\n        positions,\n        deadline,\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(id);\n        setFormData({\n            applications: loading || !cjob || !cjob.applications ? '' : cjob.applications,\n            positions: loading || !cjob || !cjob.positions  ? '' : cjob.positions,\n            deadline: loading || !cjob || !cjob.deadline ? '' : cjob.deadline,\n        });\n    },[loading, loadJobWithId]);\n    \n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            // console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value});\n          };\n      \n        const onSubmit = (e) => {\n            e.preventDefault();\n            editJob({...formData,...{id}});\n          }\n    return (\n        <Fragment>\n        <h1>Edit Job Details</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Number Of Applications</label>\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of applications\" name=\"applications\" min='0' value={applications} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n        <label for=\"id1\">Number Of Positions</label>\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of positions\" name=\"positions\" min='0' value={positions} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n        <label for=\"id1\">Deadline of Applications</label>\n          <input type=\"datetime-local\" className=\"form-control\" placeholder=\"deadline\" name=\"deadline\"  value={deadline} onChange={e => onChange(e)} required />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Edit Job\" />\n      </form>\n        </Fragment>\n    )\n}\n\nEditJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.array,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId})(EditJob);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/ViewJob.js",["184","185"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport DisplayRecruiterSide from './DisplayRecruiterSide';\nimport {getApplicationsById} from '../../actions/applications';\n\n\nconst ViewJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId, applicationjobs, getApplicationsById}) => {\n    const id = match.params.id;\n    useEffect(()=>{\n        loadJobWithId(id);\n        getApplicationsById(id);\n    },[]);\n    \n    if(!cjob || loading || applicationjobs.loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    const {\n        title,\n            applications,\n            positions,\n            deadline,\n            skills,\n            typeOfJob,\n            duration,\n            salary,\n            date_of_posting\n    } = cjob;\n    return (\n        <Fragment>\n        <h1>Job</h1>\n        <table className='table'>\n    <tr>\n        <th>Title</th>\n        <td>{title}</td>\n    </tr> \n    <tr>\n        <th>Number of Applications</th>\n        <td>{applications}</td>\n    </tr>\n\n    <tr>\n        <th>Number of positions</th>\n        <td>{positions}</td>\n    </tr>\n        <tr>\n            <th>date of posting</th>\n            <td>{moment(date_of_posting).format('LLL')}</td>\n        </tr>\n    <tr>\n        <th>Deadline of application</th>\n        <td>{moment(deadline).format('LLL')}</td>\n    </tr>\n    <tr>\n        <th>salary</th>\n        <td>{salary}</td>\n    </tr>\n    <tr>\n        <th>skills</th>\n        <td>{skills}</td>\n    </tr>\n    <tr>\n        <th>Type Of Jobs</th>\n        <td>{typeOfJob}</td>\n    </tr>\n    <tr>\n        <th>duration</th>\n        <td>{duration}</td>\n    </tr>\n    <tr>\n    <td><Link className='btn btn-primary' to={`/editjob/${id}`} >Edit Job</Link></td>\n    </tr>\n    \n</table>\n        <h2>Applications For this Job</h2>\n\n        <DisplayRecruiterSide applicationjobs={applicationjobs.applications}/>\n        </Fragment>\n    )\n}\n\nViewJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.func.isRequired,\n    getApplicationsById: PropTypes.func.isRequired,\n    applicationjobs: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n    applicationjobs: state.applications\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId, getApplicationsById})(ViewJob);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/TemplateApplicant.js",[],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/AddSOP.js",["186","187","188","189","190","191","192","193","194","195","196"],"import React, {Fragment, useEffect, useState, Redirect} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {newApplication} from '../../actions/applications';\n\nconst AddSOP = ({match, jobs: {cjob, loading}, loadJobWithId, newApplication}) => {\n    const job = match.params.id;\n\n    // console.log(job);\n    const [formData, setFormData] = useState({\n        recruiter: '',\n        status: 'Applied',\n        sop: '',\n        title: '',\n        salary: '',\n        typeOfJob: '',\n        rating: '',\n        job_id: '',\n        deadline: ''\n      });\n      \n    const {\n        recruiter,\n        status,\n        sop,\n        recruiter_id,\n        title,\n        salary,\n        typeOfJob,\n        rating,\n        deadline,\n        job_id\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(job);\n    },[loadJobWithId]);\n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value,\n              recruiter: cjob.recruiter_id, title: cjob.title, salary: cjob.salary, typeOfJob: cjob.typeOfJob, job_id: job, deadline: cjob.deadline\n            });\n          };\n      \n        const onSubmit =  (e) => {\n            e.preventDefault();\n            newApplication(formData);\n          }\n    return (\n        <Fragment>\n        <h1>Submit Application</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Statement Of Purpose</label>\n          <textarea type=\"text\" id='id1' className=\"form-control\" rows='5' placeholder=\"SOP\"  name=\"sop\"  value={sop} onChange={e => onChange(e)} required></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Application\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddSOP.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    loadJobWithId: PropTypes.array,\n    newApplication: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {newApplication, loadJobWithId})(AddSOP);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/reducers/applications.js",[],["197","198"],"/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/actions/applications.js",["199"],"import {ADDED_NEW_APPLICATION, FAILED_TO_ADD_NEW_APPLICATION, GOT_ALL_APPLICATION, FAILED_TO_GET_ALL_APPLICATION, GOT_ALL_APPLICATION_STATUS, FAILED_TO_GET_ALL_APPLICATION_STATUS } from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {loaduserusingtoken} from './auth';\n\n\nexport const newApplication = (formData) => async dispatch => {\n    try {\n        // console.log('Trinadh Is Great');\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n        // console.log('Trinadh Is Great');\n            const data = JSON.stringify(formData);\n            const response = await axios.post('/appjobs', data, config);\n            dispatch({\n                type: ADDED_NEW_APPLICATION,\n                payload: response.data\n            });\n            dispatch(setalert('New Application Created', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_ADD_NEW_APPLICATION,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} \n\n\nexport const getApplications = () => async dispatch => {\n    try {\n            const response = await axios.get('/appjobs');\n            dispatch({\n                type: GOT_ALL_APPLICATION,\n                payload: response.data\n            });\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_GET_ALL_APPLICATION,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} \n\n\nexport const getApplicationsById = (id) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n                    const data = JSON.stringify({id});\n            const response = await axios.post('/appjobs/id', data, config);        \n            dispatch({\n                type: GOT_ALL_APPLICATION,\n                payload: response.data\n            });\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_GET_ALL_APPLICATION,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} \n\n\n\nexport const changeStatus = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n                    const data = JSON.stringify(formData);\n            const response = await axios.post('/appjobs/statusupdate', data, config);        \n            dispatch({\n                type: GOT_ALL_APPLICATION_STATUS,\n                payload: response.data\n            });\n        dispatch(setalert('Status is changed', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_GET_ALL_APPLICATION_STATUS,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} ","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/MyApplications.js",["200","201","202"],"import React , {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getJobs } from '../../actions/jobs';\nimport { Applicant } from '../../actions/types';\nimport {Link} from 'react-router-dom';\nimport {loaduserusingtoken} from '../../actions/auth';\nimport {getApplications} from '../../actions/applications';\nimport DisplayApplications from './DisplayApplications';\n\nconst MyApplications = ({ auth,applications, getApplications, loaduserusingtoken}) => {\n    \n    useEffect(()=> {\n        loaduserusingtoken();\n        getApplications();\n      }, []);\n    return (<Fragment>\n            {auth.loading || !auth.user || applications.loading ? <Fragment>Loading...</Fragment> : \n    <Fragment>\n\n        <h1>My Applications</h1>\n            <DisplayApplications applicationjobs={applications.applications}/>\n    </Fragment>}\n    </Fragment>);\n};\n\nMyApplications.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    jobs: PropTypes.object.isRequired,\n    loaduserusingtoken: PropTypes.func.isRequired,\n    applications: PropTypes.object.isRequired,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.authReducer,\n    jobs: state.jobs,\n    applications: state.applications, \n});\n\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(MyApplications);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/DisplayApplications.js",["203","204"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\n\n\nconst DisplayApplications = ({applicationjobs}) => {\n    const code = applicationjobs.map(({\n            title,\n            dateOfJoining,\n            salary,\n            recruiter: {name},\n            status,\n            typeOfJob,\n            _id\n        }) => <table className='table' key={_id}>\n        {title ? \n<Fragment>\n    <tr>\n        <th>Title</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{name ? \n<Fragment>\n    <tr>\n        <th>Name Of Recruiter</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Date Of Joining</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{salary ? \n<Fragment>\n    <tr>\n        <th>salary</th>\n        <td>{salary}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Type Of Jobs</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Status of application</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n<input type=\"submit\" className=\"btn btn-warning\" value=\"Rate Job\" />\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Jobs</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nDisplayApplications.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, null)(DisplayApplications\n);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/DisplayRecruiterSide.js",["205","206"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus} from '../../actions/applications';\n\n\nconst DisplayRecruiterSide = ({applicationjobs, changeStatus}) => {\n    \n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        dateOfApplication,\n        sop,\n        status,\n        job_id,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Name Of Applicant</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{skills ? \n<Fragment>\n    <tr>\n        <th>Skills of Applicant</th>\n        <td>{skills}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfApplication ? \n<Fragment>\n    <tr>\n        <th>Date Of Application</th>\n        <td>{dateOfApplication}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{sop ? \n<Fragment>\n    <tr>\n        <th>Statement Of Purpose</th>\n        <td>{sop}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Stage of application</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n    <td>\n    \n    {\n    status === 'Applied' ? \n    <Fragment>\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Shortlist</button>\n    </Fragment>\n    :\n    (\n        status === 'Shortlist' ? \n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Accept</button>\n        :\n        <Fragment/>\n    )\n    }    \n    </td>\n    {status !== 'Accepted' ? <td>\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Reject</button>\n    </td>\n    :\n    <Fragment/>\n}\n    \n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            \n            {code}\n        </Fragment>\n    );\n}\n\nDisplayRecruiterSide.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, {changeStatus})(DisplayRecruiterSide\n);\n","/home/trinadh/IIITH/semester4/DASS/Assignment/mern/frontend/src/components/dashboard/AcceptedApplications.js",["207","208","209"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus, getApplications} from '../../actions/applications';\n\n\nconst AcceptedApplications = ({loading , applicationjobs, changeStatus, getApplications}) => {\n    useEffect(()=>{\n        getApplications();\n    },[]);\n    // console.log(applicationjobs);\n    if(loading){\n        return <Fragment><p>loading...</p></Fragment>\n    }\n    if(applicationjobs==null){\n        return <h2>Employees Of recruiter</h2>\n    }\n    applicationjobs =  applicationjobs.filter((val) => val.status === 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        typeOfJob,\n        title,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Name Of Applicant</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Date Of Joining</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Type Of Job</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{title ? \n<Fragment>\n    <tr>\n        <th>Title Of Job</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n<tr>\n    <td>\n        <button type=\"submit\" className='btn btn-warning'>Rate</button>\n    </td>\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Employess of recruiter</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nAcceptedApplications.propTypes = {\n    applicationjobs: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n    loading: PropTypes.bool,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationjobs: state.applications.applications,\n    loading: state.applications.loading\n});\nexport default connect(mapStateToProps, {changeStatus, getApplications})(AcceptedApplications\n);\n",{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":19,"column":10,"nodeType":"220","endLine":19,"endColumn":12,"suggestions":"221"},{"ruleId":"214","severity":1,"message":"222","line":19,"column":9,"nodeType":"216","messageId":"217","endLine":19,"endColumn":14},{"ruleId":"218","severity":1,"message":"223","line":37,"column":7,"nodeType":"220","endLine":37,"endColumn":32,"suggestions":"224"},{"ruleId":"214","severity":1,"message":"225","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":31},{"ruleId":"214","severity":1,"message":"226","line":1,"column":43,"nodeType":"216","messageId":"217","endLine":1,"endColumn":51},{"ruleId":"214","severity":1,"message":"227","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":19},{"ruleId":"214","severity":1,"message":"225","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"228","line":1,"column":22,"nodeType":"216","messageId":"217","endLine":1,"endColumn":46},{"ruleId":"214","severity":1,"message":"229","line":1,"column":171,"nodeType":"216","messageId":"217","endLine":1,"endColumn":183},{"ruleId":"214","severity":1,"message":"230","line":4,"column":9,"nodeType":"216","messageId":"217","endLine":4,"endColumn":27},{"ruleId":"218","severity":1,"message":"231","line":28,"column":7,"nodeType":"220","endLine":28,"endColumn":31,"suggestions":"232"},{"ruleId":"214","severity":1,"message":"233","line":1,"column":37,"nodeType":"216","messageId":"217","endLine":1,"endColumn":45},{"ruleId":"218","severity":1,"message":"234","line":16,"column":7,"nodeType":"220","endLine":16,"endColumn":9,"suggestions":"235"},{"ruleId":"214","severity":1,"message":"226","line":1,"column":47,"nodeType":"216","messageId":"217","endLine":1,"endColumn":55},{"ruleId":"214","severity":1,"message":"236","line":24,"column":9,"nodeType":"216","messageId":"217","endLine":24,"endColumn":18},{"ruleId":"214","severity":1,"message":"237","line":25,"column":9,"nodeType":"216","messageId":"217","endLine":25,"endColumn":15},{"ruleId":"214","severity":1,"message":"238","line":27,"column":9,"nodeType":"216","messageId":"217","endLine":27,"endColumn":21},{"ruleId":"214","severity":1,"message":"239","line":28,"column":9,"nodeType":"216","messageId":"217","endLine":28,"endColumn":14},{"ruleId":"214","severity":1,"message":"240","line":29,"column":9,"nodeType":"216","messageId":"217","endLine":29,"endColumn":15},{"ruleId":"214","severity":1,"message":"241","line":30,"column":9,"nodeType":"216","messageId":"217","endLine":30,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":31,"column":9,"nodeType":"216","messageId":"217","endLine":31,"endColumn":15},{"ruleId":"214","severity":1,"message":"243","line":32,"column":9,"nodeType":"216","messageId":"217","endLine":32,"endColumn":17},{"ruleId":"214","severity":1,"message":"244","line":33,"column":9,"nodeType":"216","messageId":"217","endLine":33,"endColumn":15},{"ruleId":"218","severity":1,"message":"245","line":37,"column":7,"nodeType":"220","endLine":37,"endColumn":22,"suggestions":"246"},{"ruleId":"210","replacedBy":"247"},{"ruleId":"212","replacedBy":"248"},{"ruleId":"214","severity":1,"message":"230","line":4,"column":9,"nodeType":"216","messageId":"217","endLine":4,"endColumn":27},{"ruleId":"214","severity":1,"message":"227","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":19},{"ruleId":"214","severity":1,"message":"225","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":13},{"ruleId":"218","severity":1,"message":"249","line":16,"column":10,"nodeType":"220","endLine":16,"endColumn":12,"suggestions":"250"},{"ruleId":"214","severity":1,"message":"251","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":13},{"ruleId":"214","severity":1,"message":"251","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":13},{"ruleId":"214","severity":1,"message":"251","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":13},{"ruleId":"218","severity":1,"message":"252","line":14,"column":7,"nodeType":"220","endLine":14,"endColumn":9,"suggestions":"253"},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'getUserProfile' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getApplications', 'getJobs', and 'loaduserusingtoken'. Either include them or remove the dependency array. If 'loaduserusingtoken' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["256"],"'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.contactnumber', 'profile.email', 'profile.name', 'profile.skills', and 'profile.who'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.name', you can also switch to useReducer instead of useState and read 'profile.name' in the reducer.",["257"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'Applicant' is defined but never used.","'ERROR_WHILE_DELETING_JOB' is defined but never used.","'GET_ALL_JOBS' is defined but never used.","'loaduserusingtoken' is defined but never used.","React Hook useEffect has missing dependencies: 'cjob' and 'id'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'cjob', you can also switch to useReducer instead of useState and read 'cjob' in the reducer.",["258"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getApplicationsById', 'id', and 'loadJobWithId'. Either include them or remove the dependency array. If 'loadJobWithId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["259"],"'recruiter' is assigned a value but never used.","'status' is assigned a value but never used.","'recruiter_id' is assigned a value but never used.","'title' is assigned a value but never used.","'salary' is assigned a value but never used.","'typeOfJob' is assigned a value but never used.","'rating' is assigned a value but never used.","'deadline' is assigned a value but never used.","'job_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array.",["260"],["254"],["255"],"React Hook useEffect has missing dependencies: 'getApplications' and 'loaduserusingtoken'. Either include them or remove the dependency array. If 'loaduserusingtoken' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["261"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getApplications'. Either include it or remove the dependency array. If 'getApplications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [getApplications, getJobs, loaduserusingtoken]",{"range":"277","text":"278"},"Update the dependencies array to be: [loading, getUserProfile, profile.name, profile.skills, profile.who, profile.contactnumber, profile.bio, profile.email]",{"range":"279","text":"280"},"Update the dependencies array to be: [loading, loadJobWithId, id, cjob]",{"range":"281","text":"282"},"Update the dependencies array to be: [getApplicationsById, id, loadJobWithId]",{"range":"283","text":"284"},"Update the dependencies array to be: [job, loadJobWithId]",{"range":"285","text":"286"},"Update the dependencies array to be: [getApplications, loaduserusingtoken]",{"range":"287","text":"288"},"Update the dependencies array to be: [getApplications]",{"range":"289","text":"290"},[713,715],"[getApplications, getJobs, loaduserusingtoken]",[1145,1170],"[loading, getUserProfile, profile.name, profile.skills, profile.who, profile.contactnumber, profile.bio, profile.email]",[904,928],"[loading, loadJobWithId, id, cjob]",[619,621],"[getApplicationsById, id, loadJobWithId]",[903,918],"[job, loadJobWithId]",[611,613],"[getApplications, loaduserusingtoken]",[497,499],"[getApplications]"]